 # aws_instance.AnsibleController must be replaced
-/+ resource "aws_instance" "AnsibleController" {
      ~ arn                            
      = "arn:aws:ec2:us-east-2:143812246844:instance/i-07aa34b7b33313522" -> (known after apply)
      ~ associate_public_ip_address          = false -> true # forces replacement
      ~ availability_zone              
      = "us-east-2b" -> (known after apply)
      ~ cpu_core_count                 
      = 1 -> (known after apply)       
      ~ cpu_threads_per_core           
      = 1 -> (known after apply)       
      ~ disable_api_termination              = false -> (known after apply)   
      ~ ebs_optimized                  
      = false -> (known after apply)   
      - hibernation                    
      = false -> null
      + host_id                        
      = (known after apply)
      ~ id                             
      = "i-07aa34b7b33313522" -> (known after apply)
      ~ instance_initiated_shutdown_behavior = "stop" -> (known after apply)  
      ~ instance_state                 
      = "stopped" -> (known after apply)
      ~ ipv6_address_count             
      = 0 -> (known after apply)       
      ~ ipv6_addresses                 
      = [] -> (known after apply)      
      ~ monitoring                     
      = false -> (known after apply)   
      + outpost_arn                    
      = (known after apply)
      + password_data                  
      = (known after apply)
      + placement_group                
      = (known after apply)
      + placement_partition_number           = (known after apply)
      ~ primary_network_interface_id         = "eni-0101485d1bf345ac1" -> (known after apply)
      ~ private_dns                    
      = "ip-172-20-10-109.us-east-2.compute.internal" -> (known after apply)  
      ~ private_ip                     
      = "172.20.10.109" -> (known after apply)
      + public_dns                     
      = (known after apply)
      + public_ip                      
      = (known after apply)
      ~ secondary_private_ips          
      = [] -> (known after apply)      
      ~ security_groups                
      = [] -> (known after apply)      
        tags                           
      = {
            "Name" = "Ansible-ControlNode"
        }
      ~ tenancy                        
      = "default" -> (known after apply)
      + user_data_base64               
      = (known after apply)
        # (9 unchanged attributes hidden)

      ~ capacity_reservation_specification {
          ~ capacity_reservation_preference = "open" -> (known after apply)   

          + capacity_reservation_target {
              + capacity_reservation_id = (known after apply)
            }
        }

      - credit_specification {
          - cpu_credits = "standard" ->
 null
        }

      + ebs_block_device {
          + delete_on_termination = (known after apply)
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + snapshot_id           = (known after apply)
          + tags                  = (known after apply)
          + throughput            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }

      ~ enclave_options {
          ~ enabled = false -> (known after apply)
        }

      + ephemeral_block_device {       
          + device_name  = (known after apply)
          + no_device    = (known after apply)
          + virtual_name = (known after apply)
        }

      ~ metadata_options {
          ~ http_endpoint              
 = "enabled" -> (known after apply)    
          ~ http_put_response_hop_limit = 1 -> (known after apply)
          ~ http_tokens                
 = "optional" -> (known after apply)   
          ~ instance_metadata_tags      = "disabled" -> (known after apply)   
        }

      + network_interface {
          + delete_on_termination = (known after apply)
          + device_index          = (known after apply)
          + network_interface_id  = (known after apply)
        }

      ~ root_block_device {
          ~ delete_on_termination = true -> (known after apply)
          ~ device_name           = "/dev/xvda" -> (known after apply)        
          ~ encrypted             = false -> (known after apply)
          ~ iops                  = 100
 -> (known after apply)
          + kms_key_id            = (known after apply)
          ~ tags                  = {} -> (known after apply)
          ~ throughput            = 0 -> (known after apply)
          ~ volume_id             = "vol-0c6fd0cef44a89391" -> (known after apply)
          ~ volume_size           = 8 -> (known after apply)
          ~ volume_type           = "gp2" -> (known after apply)
        }
    }

  # aws_instance.AnsibleManagedNode must be replaced
-/+ resource "aws_instance" "AnsibleManagedNode" {
      ~ arn                            
      = "arn:aws:ec2:us-east-2:143812246844:instance/i-09786ab8ac26d87b0" -> (known after apply)
      ~ associate_public_ip_address          = false -> true # forces replacement
      ~ availability_zone              
      = "us-east-2b" -> (known after apply)
      ~ cpu_core_count                 
      = 1 -> (known after apply)       
      ~ cpu_threads_per_core           
      = 1 -> (known after apply)       
      ~ disable_api_termination              = false -> (known after apply)   
      ~ ebs_optimized                  
      = false -> (known after apply)   
      - hibernation                    
      = false -> null
      + host_id                        
      = (known after apply)
      ~ id                             
      = "i-09786ab8ac26d87b0" -> (known after apply)
      ~ instance_initiated_shutdown_behavior = "stop" -> (known after apply)  
      ~ instance_state                 
      = "stopped" -> (known after apply)
      ~ ipv6_address_count             
      = 0 -> (known after apply)       
      ~ ipv6_addresses                 
      = [] -> (known after apply)      
      ~ monitoring                     
      = false -> (known after apply)   
      + outpost_arn                    
      = (known after apply)
      + password_data                  
      = (known after apply)
      + placement_group                
      = (known after apply)
      + placement_partition_number           = (known after apply)
      ~ primary_network_interface_id         = "eni-09aaa8ae6c4dc5b16" -> (known after apply)
      ~ private_dns                    
      = "ip-172-20-10-254.us-east-2.compute.internal" -> (known after apply)  
      ~ private_ip                     
      = "172.20.10.254" -> (known after apply)
      + public_dns                     
      = (known after apply)
      + public_ip                      
      = (known after apply)
      ~ secondary_private_ips          
      = [] -> (known after apply)      
      ~ security_groups                
      = [] -> (known after apply)      
        tags                           
      = {
            "Name" = "Ansible-ApacheTomcat"
        }
      ~ tenancy                        
      = "default" -> (known after apply)
      + user_data_base64               
      = (known after apply)
        # (9 unchanged attributes hidden)

      ~ capacity_reservation_specification {
          ~ capacity_reservation_preference = "open" -> (known after apply)   

          + capacity_reservation_target {
              + capacity_reservation_id = (known after apply)
            }
        }

      - credit_specification {
          - cpu_credits = "standard" ->
 null
        }

      + ebs_block_device {
          + delete_on_termination = (known after apply)
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + snapshot_id           = (known after apply)
          + tags                  = (known after apply)
          + throughput            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }

      ~ enclave_options {
          ~ enabled = false -> (known after apply)
        }

      + ephemeral_block_device {       
          + device_name  = (known after apply)
          + no_device    = (known after apply)
          + virtual_name = (known after apply)
        }

      ~ metadata_options {
          ~ http_endpoint              
 = "enabled" -> (known after apply)    
          ~ http_put_response_hop_limit = 1 -> (known after apply)
          ~ http_tokens                
 = "optional" -> (known after apply)   
          ~ instance_metadata_tags      = "disabled" -> (known after apply)   
        }

      + network_interface {
          + delete_on_termination = (known after apply)
          + device_index          = (known after apply)
          + network_interface_id  = (known after apply)
        }

      ~ root_block_device {
          ~ delete_on_termination = true -> (known after apply)
          ~ device_name           = "/dev/xvda" -> (known after apply)        
          ~ encrypted             = false -> (known after apply)
          ~ iops                  = 100
 -> (known after apply)
          + kms_key_id            = (known after apply)
          ~ tags                  = {} -> (known after apply)
          ~ throughput            = 0 -> (known after apply)
          ~ volume_id             = "vol-0aa62a315d35f403c" -> (known after apply)
          ~ volume_size           = 8 -> (known after apply)
          ~ volume_type           = "gp2" -> (known after apply)
        }
    }

  # aws_instance.DockerHost must be replaced
-/+ resource "aws_instance" "DockerHost" {
      ~ arn                            
      = "arn:aws:ec2:us-east-2:143812246844:instance/i-0db40704c6ac19b64" -> (known after apply)
      ~ associate_public_ip_address          = false -> true # forces replacement
      ~ availability_zone              
      = "us-east-2b" -> (known after apply)
      ~ cpu_core_count                 
      = 1 -> (known after apply)       
      ~ cpu_threads_per_core           
      = 1 -> (known after apply)       
      ~ disable_api_termination              = false -> (known after apply)   
      ~ ebs_optimized                  
      = false -> (known after apply)   
      - hibernation                    
      = false -> null
      + host_id                        
      = (known after apply)
      ~ id                             
      = "i-0db40704c6ac19b64" -> (known after apply)
      ~ instance_initiated_shutdown_behavior = "stop" -> (known after apply)  
      ~ instance_state                 
      = "stopped" -> (known after apply)
      ~ ipv6_address_count             
      = 0 -> (known after apply)       
      ~ ipv6_addresses                 
      = [] -> (known after apply)      
      ~ monitoring                     
      = false -> (known after apply)   
      + outpost_arn                    
      = (known after apply)
      + password_data                  
      = (known after apply)
      + placement_group                
      = (known after apply)
      + placement_partition_number           = (known after apply)
      ~ primary_network_interface_id         = "eni-0e138bb0046d214a4" -> (known after apply)
      ~ private_dns                    
      = "ip-172-20-10-73.us-east-2.compute.internal" -> (known after apply)   
      ~ private_ip                     
      = "172.20.10.73" -> (known after apply)
      + public_dns                     
      = (known after apply)
      + public_ip                      
      = (known after apply)
      ~ secondary_private_ips          
      = [] -> (known after apply)      
      ~ security_groups                
      = [] -> (known after apply)      
        tags                           
      = {
            "Name" = "DockerHost"      
        }
      ~ tenancy                        
      = "default" -> (known after apply)
      + user_data_base64               
      = (known after apply)
        # (9 unchanged attributes hidden)

      ~ capacity_reservation_specification {
          ~ capacity_reservation_preference = "open" -> (known after apply)   

          + capacity_reservation_target {
              + capacity_reservation_id = (known after apply)
            }
        }

      - credit_specification {
          - cpu_credits = "standard" ->
 null
        }

      + ebs_block_device {
          + delete_on_termination = (known after apply)
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + snapshot_id           = (known after apply)
          + tags                  = (known after apply)
          + throughput            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }

      ~ enclave_options {
          ~ enabled = false -> (known after apply)
        }

      + ephemeral_block_device {       
          + device_name  = (known after apply)
          + no_device    = (known after apply)
          + virtual_name = (known after apply)
        }

      ~ metadata_options {
          ~ http_endpoint              
 = "enabled" -> (known after apply)    
          ~ http_put_response_hop_limit = 1 -> (known after apply)
          ~ http_tokens                
 = "optional" -> (known after apply)   
          ~ instance_metadata_tags      = "disabled" -> (known after apply)   
        }

      + network_interface {
          + delete_on_termination = (known after apply)
          + device_index          = (known after apply)
          + network_interface_id  = (known after apply)
        }

      ~ root_block_device {
          ~ delete_on_termination = true -> (known after apply)
          ~ device_name           = "/dev/xvda" -> (known after apply)        
          ~ encrypted             = false -> (known after apply)
          ~ iops                  = 100
 -> (known after apply)
          + kms_key_id            = (known after apply)
          ~ tags                  = {} -> (known after apply)
          ~ throughput            = 0 -> (known after apply)
          ~ volume_id             = "vol-0dbbeaff1c85aae14" -> (known after apply)
          ~ volume_size           = 8 -> (known after apply)
          ~ volume_type           = "gp2" -> (known after apply)
        }
    }

  # aws_instance.Jenkins must be replaced
-/+ resource "aws_instance" "Jenkins" {
      ~ arn                            
      = "arn:aws:ec2:us-east-2:143812246844:instance/i-09f1f9ff5cea06a08" -> (known after apply)
      ~ associate_public_ip_address          = false -> true # forces replacement
      ~ availability_zone              
      = "us-east-2b" -> (known after apply)
      ~ cpu_core_count                 
      = 1 -> (known after apply)       
      ~ cpu_threads_per_core           
      = 1 -> (known after apply)       
      ~ disable_api_termination              = false -> (known after apply)   
      ~ ebs_optimized                  
      = false -> (known after apply)   
      - hibernation                    
      = false -> null
      + host_id                        
      = (known after apply)
      ~ id                             
      = "i-09f1f9ff5cea06a08" -> (known after apply)
      ~ instance_initiated_shutdown_behavior = "stop" -> (known after apply)  
      ~ instance_state                 
      = "stopped" -> (known after apply)
      ~ ipv6_address_count             
      = 0 -> (known after apply)       
      ~ ipv6_addresses                 
      = [] -> (known after apply)      
      ~ monitoring                     
      = false -> (known after apply)   
      + outpost_arn                    
      = (known after apply)
      + password_data                  
      = (known after apply)
      + placement_group                
      = (known after apply)
      + placement_partition_number           = (known after apply)
      ~ primary_network_interface_id         = "eni-0563678dcf0e013d4" -> (known after apply)
      ~ private_dns                    
      = "ip-172-20-10-185.us-east-2.compute.internal" -> (known after apply)  
      ~ private_ip                     
      = "172.20.10.185" -> (known after apply)
      + public_dns                     
      = (known after apply)
      + public_ip                      
      = (known after apply)
      ~ secondary_private_ips          
      = [] -> (known after apply)      
      ~ security_groups                
      = [] -> (known after apply)      
        tags                           
      = {
            "Name" = "Jenkins-Server"  
        }
      ~ tenancy                        
      = "default" -> (known after apply)
      + user_data_base64               
      = (known after apply)
        # (9 unchanged attributes hidden)

      ~ capacity_reservation_specification {
          ~ capacity_reservation_preference = "open" -> (known after apply)   

          + capacity_reservation_target {
              + capacity_reservation_id = (known after apply)
            }
        }

      - credit_specification {
          - cpu_credits = "standard" ->
 null
        }

      + ebs_block_device {
          + delete_on_termination = (known after apply)
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + snapshot_id           = (known after apply)
          + tags                  = (known after apply)
          + throughput            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }

      ~ enclave_options {
          ~ enabled = false -> (known after apply)
        }

      + ephemeral_block_device {       
          + device_name  = (known after apply)
          + no_device    = (known after apply)
          + virtual_name = (known after apply)
        }

      ~ metadata_options {
          ~ http_endpoint              
 = "enabled" -> (known after apply)    
          ~ http_put_response_hop_limit = 1 -> (known after apply)
          ~ http_tokens                
 = "optional" -> (known after apply)   
          ~ instance_metadata_tags      = "disabled" -> (known after apply)   
        }

      + network_interface {
          + delete_on_termination = (known after apply)
          + device_index          = (known after apply)
          + network_interface_id  = (known after apply)
        }

      ~ root_block_device {
          ~ delete_on_termination = true -> (known after apply)
          ~ device_name           = "/dev/xvda" -> (known after apply)        
          ~ encrypted             = false -> (known after apply)
          ~ iops                  = 100
 -> (known after apply)
          + kms_key_id            = (known after apply)
          ~ tags                  = {} -> (known after apply)
          ~ throughput            = 0 -> (known after apply)
          ~ volume_id             = "vol-0f1e9c8bb57b80a42" -> (known after apply)
          ~ volume_size           = 8 -> (known after apply)
          ~ volume_type           = "gp2" -> (known after apply)
        }
    }

  # aws_instance.Nexus will be created
  + resource "aws_instance" "Nexus" {  
      + ami                            
      = "ami-0b0f4c27376f8aa79"        
      + arn                            
      = (known after apply)
      + associate_public_ip_address          = true
      + availability_zone              
      = (known after apply)
      + cpu_core_count                 
      = (known after apply)
      + cpu_threads_per_core           
      = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                  
      = (known after apply)
      + get_password_data              
      = false
      + host_id                        
      = (known after apply)
      + id                             
      = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_state                 
      = (known after apply)
      + instance_type                  
      = "t2.medium"
      + ipv6_address_count             
      = (known after apply)
      + ipv6_addresses                 
      = (known after apply)
      + key_name                       
      = "arunkumar"
      + monitoring                     
      = (known after apply)
      + outpost_arn                    
      = (known after apply)
      + password_data                  
      = (known after apply)
      + placement_group                
      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                    
      = (known after apply)
      + private_ip                     
      = (known after apply)
      + public_dns                     
      = (known after apply)
      + public_ip                      
      = (known after apply)
      + secondary_private_ips          
      = (known after apply)
      + security_groups                
      = (known after apply)
      + source_dest_check              
      = true
      + subnet_id                      
      = "subnet-0a4eba0b6f0b34aa8"     
      + tags                           
      = {
          + "Name" = "Nexus-Server"    
        }
      + tags_all                       
      = {
          + "Name" = "Nexus-Server"    
        }
      + tenancy                        
      = (known after apply)
      + user_data                      
      = "ebe3a23c8f1faf6a3eb08994d8f9b258c1e856c9"
      + user_data_base64               
      = (known after apply)
      + vpc_security_group_ids         
      = [
          + "sg-0399373329b4cd5c0",    
        ]

      + capacity_reservation_specification {
          + capacity_reservation_preference = (known after apply)

          + capacity_reservation_target {
              + capacity_reservation_id = (known after apply)
            }
        }

      + ebs_block_device {
          + delete_on_termination = (known after apply)
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + snapshot_id           = (known after apply)
          + tags                  = (known after apply)
          + throughput            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }

      + enclave_options {
          + enabled = (known after apply)
        }

      + ephemeral_block_device {       
          + device_name  = (known after apply)
          + no_device    = (known after apply)
          + virtual_name = (known after apply)
        }

      + metadata_options {
          + http_endpoint              
 = (known after apply)
          + http_put_response_hop_limit = (known after apply)
          + http_tokens                
 = (known after apply)
          + instance_metadata_tags      = (known after apply)
        }

      + network_interface {
          + delete_on_termination = (known after apply)
          + device_index          = (known after apply)
          + network_interface_id  = (known after apply)
        }

      + root_block_device {
          + delete_on_termination = (known after apply)
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + tags                  = (known after apply)
          + throughput            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }
    }

Plan: 5 to add, 0 to change, 4 to destroy.
aws_instance.AnsibleManagedNode: Destroying... [id=i-09786ab8ac26d87b0]       
Apply complete! Resources: 5 added, 0 changed, 4 destroyed.
PS E:\VScode_codings\MyLab\VPC>

